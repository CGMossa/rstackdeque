% Generated by roxygen2 (4.0.1): do not edit by hand
\name{as.data.frame.rstack}
\alias{as.data.frame.rstack}
\title{Convert an \code{rstack} to a \code{data.frame}.}
\usage{
\method{as.data.frame}{rstack}(s)
}
\arguments{
\item{s}{The stack to convert}
}
\value{
A data frame with the first row the previous top of the stack.
}
\description{
Converts the elements of an \code{rstack} into rows of a dataframe, if this is reasonable.
}
\details{
This method runs in O(N) time, and will only work if all elements of the stack have the
same length() (e.g., same number of columns), and if any of the elements have names, then those
names do not conflict (e.g., same column names where used). This is accomplished by a call to
\code{do.call("rbind", as.list(s))}, where \code{as.list(s)} converts the stack \code{s} to a list
where the top element becomes the first element of the list.
}
\examples{
s <- rstack()
s <- insert_top(s, data.frame(names = c("Bob", "Joe"), ages = c(25, 18)))
s <- insert_top(s, data.frame(names = c("Mary", "Kate", "Ashley"), ages = c(27, 26, 21)))
print(s)

sd <- as.data.frame(s)
print(sd)


## Building a stack in a loop, converting to a dataframe after the fact:
require("dplyr")
s <- rstack()
for(i in 1:10000) {
 if(runif(1,0,1) < 0.5) {
   s <- s \%>\% insert_top(data.frame(i = i, type = "sqrt", val = sqrt(i)))
 } else {
   s <- s \%>\% insert_top(data.frame(i = i, type = "log", val = log(i)))
 }
 if(i \%\% 100 == 0) {
   print(i/10000)
 }
}
print(head(as.data.frame(s)))
}

